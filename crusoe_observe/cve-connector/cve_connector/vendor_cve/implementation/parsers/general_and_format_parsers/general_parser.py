"""Module contains superclass for parsers."""

from abc import ABC, abstractmethod
from datetime import date, timedelta
from html_table_extractor.extractor import Extractor
from lxml.html import tostring


class GeneralParser(ABC):
    """
    Superclass for parsers.
    """
    def __init__(self, url, from_date=None, to_date=None):
        self.url = url
        self.data = None
        self.to_date = to_date if to_date else date.today()
        self.from_date = from_date if from_date else date.today() - timedelta(days=1)
        self.date_format = '%Y/%m/%d'
        self.entities = []

    @abstractmethod
    def load_content(self):
        """
        Loads content from URL.
        :return:
        """
        pass

    @abstractmethod
    def parse(self):
        """
        Parses loaded content.
        :return:
        """
        pass

    @staticmethod
    def parse_table(table):
        """
        Parse table got as an input.

        :param table: input table
        :return: parsed table as a tuple: header, rows
        """
        unicode = str
        table_string = tostring(table, encoding=unicode)
        extractor = Extractor(table_string)
        extractor.parse()
        table_rows_list = extractor.return_list()
        table_header = table_rows_list.pop(0)
        return table_header, table_rows_list
