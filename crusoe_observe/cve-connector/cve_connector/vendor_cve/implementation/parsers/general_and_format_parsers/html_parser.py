"""Module contains functionality for parsing HTML."""

import lxml
import lxml.etree
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

from cve_connector.vendor_cve.implementation.parsers.general_and_format_parsers\
    .general_parser import GeneralParser


class HtmlParser(GeneralParser):
    """
    Parser of HTML files.
    """
    def __init__(self, url, from_date=None, to_date=None):
        super().__init__(url, from_date, to_date)

    def load_content(self):
        """
        Load content from URL.

        :return: None
        """
        content = self.get_content_from_ulr()
        data = lxml.etree.HTML(content)
        self.data = data

    def get_content_from_ulr(self):
        """
        Gets content from URL and returns it.

        :return: content from URL
        """
        if not self.url:
            raise ValueError('Url must not be empty.')
        options = Options()
        options.add_argument("--headless")
        options.add_argument('--no-sandbox')

        driver = webdriver.Chrome(chrome_options=options)
        driver.implicitly_wait(10)
        driver.get(self.url)
        content = driver.page_source
        driver.quit()
        return content

    def parse(self):
        pass
