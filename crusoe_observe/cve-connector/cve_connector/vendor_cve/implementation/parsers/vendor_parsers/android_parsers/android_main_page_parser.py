"""Module contains functionality that parser main page for Android vulnerabilities."""

from cve_connector.vendor_cve.implementation.parsers.general_and_format_parsers\
    .html_parser import HtmlParser
from cve_connector.vendor_cve.implementation.utilities.utility_functions \
    import get_current_date, string_to_date


class AndroidMainPageParser(HtmlParser):
    """
    Class containing functionality for parsing android main page.
    """
    def __init__(self, url, from_date=None, to_date=None):
        super().__init__(url, from_date, to_date)
        self.date_format = '%B %d, %Y'  # April 2, 2018
        self.load_content()

    def parse(self):
        """
        Provides parsing functionality.

        :return: None
        """
        table_rows = self.data.xpath('.//div[@class="devsite-table-wrapper"]/table/tbody/tr[td]')
        table_header_items = self.data.xpath(
            './/div[@class="devsite-table-wrapper"]/table/tbody/tr/th/text()')
        if not table_rows or not table_header_items:
            raise ValueError('Format of parsed Android bulletin has changed.')

        for row in table_rows:
            row_items = row.xpath('./td')
            date, bulletin_url = self.get_bulletin_info(table_header_items, row_items)
            if self.from_date <= date <= self.to_date:
                self.entities.append(bulletin_url)

    def get_bulletin_info(self, header_items, row_items):
        """
        Extracts date and url from android bulletin.

        :param header_items: header of table
        :param row_items: rows in table
        :return: tuple - date, url
        """
        date = get_current_date()
        url = ''
        for header, item in zip(header_items, row_items):
            if 'published' in header.lower():
                date_list = item.xpath('.//text()')
                if date_list:
                    date = string_to_date(date_list[0], self.date_format)
            if 'bulletin' in header.lower():
                url_list = item.xpath('.//@href')
                if url_list:
                    url = url_list[0]
        return date, url
