"""
Module contains functionality that determines whether a vulnerability causes confidentiality,
integrity, or availability loss.
"""

from cve_connector.nvd_cve.categorization.helpers import test_incidence, cve_is_about_system


def has_system_confidentiality_loss(description, cvssv2):
    """
    Function determines whether particular CVE has "System confidentiality
    loss" as its impact.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :return: True if CVE has "System confidentiality loss" as its impact.
    """

    sufficient_condition = [
        "devices allow remote attackers to read arbitrary files",
        "compromise the systems confidentiality",
        "read any file on the camera's linux filesystem",
        "gain read-write access to system settings",
        "all system settings can be read",
        "leak information about any clients connected to it",
        "read sensitive files on the system",
        "access arbitrary files on an affected device",
        "access system files",
        "gain unauthorized read access to files on the host",
        "obtain sensitive system information",
        "obtain sensitive information from kernel memory",
        "obtain privileged file system access",
        "routers allow directory traversal sequences",
        "packets can contain fragments of system memory",
        "obtain kernel memory",
        "read kernel memory",
        "read system memory",
        "reading system memory",
        "read device memory",
        "read host memory",
        "access kernel memory",
        "access sensitive kernel memory",
        "access shared memory",
        "host arbitrary files",
        "enumerate user accounts",
        "compromise an affected system",
    ]

    if cvssv2['c'] == "PARTIAL":
        if test_incidence(description, sufficient_condition):
            return True

    return cvssv2['c'] == "COMPLETE"


def has_system_integrity_loss(description, cvssv2):
    """
    Function determines whether particular CVE has "System integrity loss"
    as its impact.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :return: True if CVE has "System integrity loss" as its impact.
    """

    sufficient_condition = [
        "compromise the systems confidentiality or integrity",
        "gain read-write access to system settings",
        "all system settings can be read and changed",
        "create arbitrary directories on the affected system",
        "on ismartalarm cube devices, there is incorrect access control",
        "bypass url filters that have been configured for an affected device",
        "bypass configured filters on the device",
        "modification of system files",
        "obtain privileged file system access",
        "change configuration settings",
        "compromise the affected system",
        "overwrite arbitrary kernel memory",
        "modify kernel memory",
        "overwrite kernel memory",
        "modifying kernel memory",
        "overwriting kernel memory",
        "corrupt kernel memory",
        "corrupt user memory",
        "upload firmware changes",
        "configuration parameter changes",
        "obtain sensitive information from kernel memory",
        "change the device's settings",
        "configuration changes",
        "modification of system states",
        "host arbitrary files"
    ]

    if cvssv2['i'] == "PARTIAL":
        if test_incidence(description, sufficient_condition):
            return True

    return cvssv2['i'] == "COMPLETE"


def has_system_availability_loss(description, cvssv2):
    """
    Function determines whether particular CVE has "System availability loss"
    as its impact.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :return: True if CVE has "System availability loss" as its impact.
    """

    system_tokens = [
        'device crash',
        'device reload',
        'system crash',
        'cpu consumption'
    ]
    # cannot use reboot because description often describes what happens after
    # normal = expected reboot caused regularly

    for token in system_tokens:
        if token in description:
            return True

    sufficient_condition = [
        "an extended denial of service condition for the device",
        "exhaust the memory resources of the machine",
        "denial of service (dos) condition on an affected device",
        "crash systemui",
        "denial of service (dos) condition on the affected appliance",
        "cause the device to hang or unexpectedly reload",
        "denial of service (use-after-free) via a crafted application",
        "cause an affected device to reload",
        "cause an affected system to stop"
    ]

    if cvssv2['a'] == "PARTIAL":
        if test_incidence(description, sufficient_condition):
            return True

    return cvssv2['a'] != 'NONE' if has_system_integrity_loss(
        description,
        cvssv2) \
        else cvssv2['a'] == 'COMPLETE'


def system_confidentiality_changed(description, cvssv2, cpe_type):
    """
    Function determines whether particular CVE has "System confidentiality
    loss" as its impact. It is less strict than
    has_system_confidentiality_loss() function.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :param cpe_type: One of {'a', 'o', 'h'} = application, operating system,
    hardware
    :return: True if CVE has "System confidentiality loss" as its impact.
    """

    if "in the remote system" in description and cvssv2['c'] == "PARTIAL":
        return True

    return cve_is_about_system(cpe_type) and cvssv2['c'] == "PARTIAL"


def system_integrity_changed(description, cvssv2, cpe_type):
    """
    Function determines whether particular CVE has "System integrity loss"
    as its impact. It is less strict than
    has_system_integrity_loss() function.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :param cpe_type: One of {'a', 'o', 'h'} = application, operating system,
    hardware
    :return: True if CVE has "System integrity loss" as its impact.
    """

    if "in the remote system" in description and cvssv2['i'] == "PARTIAL":
        return True

    return cve_is_about_system(cpe_type) and cvssv2['i'] == "PARTIAL"


def system_availability_changed(description, cvssv2, cpe_type):
    """
    Function determines whether particular CVE has "System availability loss"
    as its impact. It is less strict than
    has_system_availability_loss() function.

    :param description: description of CVE
    :param cvssv2: CVSS version 2 of CVE
    :param cpe_type: One of {'a', 'o', 'h'} = application, operating system,
    hardware
    :return: True if CVE has "System availability loss" as its impact.
    """

    if "in the remote system" in description and cvssv2['a'] == "PARTIAL":
        return True

    return cve_is_about_system(cpe_type) and cvssv2['a'] == "PARTIAL"


def add_other_cia_impacts(result_impacts, cvssv2):
    """
    When CVE has one of "System CIA loss" as an impact, add the other.

    :param result_impacts: set of result impacts
    :param cvssv2: CVSS version 2 of CVE
    :return: result impacts with added impacts.
    """
    if "System integrity loss" in result_impacts and \
            "System confidentiality loss" not in result_impacts:
        if cvssv2['c'] == "PARTIAL":
            result_impacts.append("System confidentiality loss")

    if "System integrity loss" in result_impacts and \
            "System availability loss" not in result_impacts:
        if cvssv2['a'] == "PARTIAL":
            result_impacts.append("System availability loss")

    if "System confidentiality loss" in result_impacts and \
            "System integrity loss" not in result_impacts:
        if cvssv2['i'] == "PARTIAL":
            result_impacts.append("System integrity loss")

    if "System confidentiality loss" in result_impacts and \
            "System availability loss" not in result_impacts:
        if cvssv2['a'] == "PARTIAL":
            result_impacts.append("System availability loss")

    if "System availability loss" in result_impacts and \
            "System confidentiality loss" not in result_impacts:
        if cvssv2['c'] == "PARTIAL":
            result_impacts.append("System confidentiality loss")

    if "System availability loss" in result_impacts and \
            "System integrity loss" not in result_impacts:
        if cvssv2['i'] == "PARTIAL":
            result_impacts.append("System integrity loss")
